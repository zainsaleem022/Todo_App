services:
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: todo-frontend
  #   # ports:
  #   # - "3001:3001"
  #   environment:
  #     - REACT_APP_BACKEND_URL=/api
  #     # - REACT_APP_BACKEND_URL=http://localhost:5000
  #     # - REACT_APP_BACKEND_URL=http://backend:5000
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   depends_on:
  #     - backend
  #   networks:
  #     - todo_app_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: todo-backend
    ports:
      - "5000:5000"
    environment:
      - FRONTEND_URL=http://localhost
      # - FRONTEND_URL=http://frontend:3001
      - PGUSER=${PGUSER}
      - PGHOST=${PGHOST}
      - PGDATABASE=${PGDATABASE}
      - PGPASSWORD=${PGPASSWORD}
      - PGPORT=${PGPORT}
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
    networks:
      - todo_app_network

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - todo_app_network

  nginx:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: todo-nginx
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - todo_app_network

volumes:
  postgres_data:

networks:
  todo_app_network:
